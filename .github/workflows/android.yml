name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # أسرار التوقيع (اختياري للتوقيع التلقائي). خلّيهم فـ repo secrets.
      KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    steps:
      # 1) جِب الكود
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Java 17 (متوافق مع AGP 8.x)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      # 3) تحقّق من gradle wrapper
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      # 4) صلاحية التنفيذ للـ gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 5) (اختياري) استرجاع keystore من BASE64 إذا السرّ موجود
      - name: Restore keystore (if provided)
        if: env.KEYSTORE_BASE64 != ''
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > app/release-keystore.jks
          ls -lh app/release-keystore.jks
          chmod 600 app/release-keystore.jks

      # 6) (اختياري) إعداد خصائص التوقيع للـ Release إذا السرّيات متوفّرة
      - name: Configure signing props (if provided)
        if: env.KEYSTORE_BASE64 != ''
        run: |
          cat >> gradle.properties <<'EOF'
          MY_STORE_FILE=app/release-keystore.jks
          MY_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
          MY_KEY_ALIAS=${{ secrets.KEY_ALIAS }}
          MY_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}
          EOF
          echo "gradle.properties updated"

      # 7) Build Debug APK (للتجربة)
      - name: Assemble Debug APK
        run: ./gradlew clean :app:assembleDebug -S --warning-mode all

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk

      # 8) Build Release AAB (موقّع إذا الخطوات أعلاه مفعّلة)
      - name: Assemble Release AAB
        run: ./gradlew :app:bundleRelease -S --warning-mode all

      - name: Upload Release AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: app/build/outputs/bundle/release/*.aab
