name: Diagnose Keystore (lite)

on:
  workflow_dispatch:

jobs:
  diag:
    runs-on: ubuntu-latest
    steps:
      - name: Restore & Diagnose
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          STOREPASS: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYPASS: ${{ secrets.KEY_PASSWORD }}
          ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          set -euo pipefail
          echo "== Restore keystore =="
          printf "%s" "$KEYSTORE_BASE64" | base64 -d > release-keystore.jks
          ls -l release-keystore.jks

          echo ""
          echo "== 1) Check store password =="
          if keytool -list -keystore release-keystore.jks -storepass "$STOREPASS" >/dev/null 2>&1; then
            echo "✅ storepass OK"
          else
            echo "❌ storepass WRONG  -> صحّح secret: KEYSTORE_PASSWORD"
            exit 1
          fi

          echo ""
          echo "== 2) List aliases =="
          aliases=$(keytool -list -keystore release-keystore.jks -storepass "$STOREPASS" 2>/dev/null | sed -n 's/^Alias name: //p' | tr -d '\r')
          echo "Found aliases: ${aliases:-<none>}"
          if [ -z "${ALIAS:-}" ]; then
            # إذا ما عطيناش KEY_ALIAS، ناخدو أول واحد
            ALIAS=$(echo "$aliases" | head -n1)
            echo "Using detected alias: ${ALIAS:-<none>}"
          else
            echo "Using provided KEY_ALIAS: $ALIAS"
          fi
          if [ -z "${ALIAS:-}" ]; then
            echo "❌ No alias found  -> تأكد من KEYSTORE_BASE64"
            exit 1
          fi

          echo ""
          echo "== 3) Check key password for alias '$ALIAS' =="
          if keytool -list -keystore release-keystore.jks -storepass "$STOREPASS" -alias "$ALIAS" -keypass "$KEYPASS" >/dev/null 2>&1; then
            echo "✅ keypass OK for alias '$ALIAS'"
          else
            echo "❌ keypass WRONG for alias '$ALIAS'  -> صحّح secret: KEY_PASSWORD أو KEY_ALIAS"
            exit 1
          fi

          echo ""
          echo "🎉 All good. تقدر دابا تبني الـ Release."
